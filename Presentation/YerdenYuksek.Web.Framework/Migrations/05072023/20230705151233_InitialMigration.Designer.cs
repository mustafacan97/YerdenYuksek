// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCommerce.Infrastructure.Persistence.Primitives;

#nullable disable

namespace YerdenYuksek.Web.Framework.Migrations._05072023
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230705151233_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CustomerRoleMapping", b =>
                {
                    b.Property<Guid>("CustomerRoleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.HasKey("CustomerRoleId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerRoleMapping");
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Common.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("City")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasPrecision(6)
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Address", (string)null);
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Configuration.Setting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Setting", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c2c5df08-baaa-4df7-a62c-5239f01f5e51"),
                            Name = "customersettings.usernamesenabled",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("df24c306-80ba-45e9-ba42-b724dc013b3d"),
                            Name = "customersettings.checkusernameavailabilityenabled",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("38ba957b-2643-40be-b5d5-51c193e70729"),
                            Name = "customersettings.allowuserstochangeusernames",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("74523357-ae56-4d38-ab43-db1c675ca4fd"),
                            Name = "customersettings.usernamevalidationenabled",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("627963a9-4f64-4e6d-bc67-bf730733ef7d"),
                            Name = "customersettings.usernamevalidationuseregex",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("d7655faf-d722-416c-bb83-ef70bc613249"),
                            Name = "customersettings.usernamevalidationrule",
                            Value = ""
                        },
                        new
                        {
                            Id = new Guid("096599da-6d21-4c17-a5eb-789075b34130"),
                            Name = "customersettings.phonenumbervalidationenabled",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("96fabc77-5e81-4382-a5ee-070733c0315b"),
                            Name = "customersettings.phonenumbervalidationuseregex",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("b05733b0-a352-4e3c-abfc-e33f96b75a4e"),
                            Name = "customersettings.phonenumbervalidationrule",
                            Value = "^[0-9]{1,14}?$"
                        },
                        new
                        {
                            Id = new Guid("ca1ed8d6-f51c-4d9b-8b75-abc5c6a0b683"),
                            Name = "customersettings.defaultpasswordformat",
                            Value = "Hashed"
                        },
                        new
                        {
                            Id = new Guid("a2602499-86a7-41d0-96e8-0f500e72c013"),
                            Name = "customersettings.hashedpasswordformat",
                            Value = "SHA512"
                        },
                        new
                        {
                            Id = new Guid("dadf2025-e538-480c-af3a-85626673f8ac"),
                            Name = "customersettings.passwordminlength",
                            Value = "6"
                        },
                        new
                        {
                            Id = new Guid("b16c669e-16f0-4271-8c58-d06c8201e4b3"),
                            Name = "customersettings.passwordmaxlength",
                            Value = "64"
                        },
                        new
                        {
                            Id = new Guid("880cd7b4-44cb-45f6-9111-2c00b938e565"),
                            Name = "customersettings.passwordrequirelowercase",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("82ee501f-4259-4614-81e5-7b2976428f4c"),
                            Name = "customersettings.passwordrequireuppercase",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("ae9ca4d1-7a05-48b7-ae24-f3eafdc7deaa"),
                            Name = "customersettings.passwordrequirenonalphanumeric",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("1a079066-6d12-48d3-93d5-d750f8a84ba9"),
                            Name = "customersettings.passwordrequiredigit",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("e550c700-0894-4e47-a83c-26fe307027f4"),
                            Name = "customersettings.unduplicatedpasswordsnumber",
                            Value = "4"
                        },
                        new
                        {
                            Id = new Guid("ff73ebdd-9b8b-44c0-b3cf-e0fcaea0ddfa"),
                            Name = "customersettings.passwordrecoverylinkdaysvalid",
                            Value = "7"
                        },
                        new
                        {
                            Id = new Guid("b2e38a07-e51d-4a83-a0c1-2e4758ac2c0f"),
                            Name = "customersettings.passwordlifetime",
                            Value = "90"
                        },
                        new
                        {
                            Id = new Guid("9053c876-21b2-43a5-a0d2-7e031d037d2e"),
                            Name = "customersettings.failedpasswordallowedattempts",
                            Value = "0"
                        },
                        new
                        {
                            Id = new Guid("56225459-57c9-47ee-87d5-9a424c14eae9"),
                            Name = "customersettings.failedpasswordlockoutminutes",
                            Value = "30"
                        },
                        new
                        {
                            Id = new Guid("eef44b3e-0bb9-4c44-a73c-38b7dbf3acd1"),
                            Name = "customersettings.allowcustomerstouploadavatars",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("5892b8f4-d088-46f9-9524-30d412ad8cec"),
                            Name = "customersettings.avatarmaximumsizebytes",
                            Value = "20000"
                        },
                        new
                        {
                            Id = new Guid("40c05aa6-0f7e-41c3-bd2a-0c57e9fb30b7"),
                            Name = "customersettings.defaultavatarenabled",
                            Value = "True"
                        },
                        new
                        {
                            Id = new Guid("ebd7bcf8-e4ab-494f-b281-dc6529a625bc"),
                            Name = "customersettings.showcustomerslocation",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("0e6b67ef-2c8b-45df-9a18-4f1fba45b328"),
                            Name = "customersettings.showcustomersjoindate",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("dbb29e50-cf4e-4521-8bec-982d8785a9e5"),
                            Name = "customersettings.allowviewingprofiles",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("83b0350a-1d82-4307-a725-a7c8f6b47c11"),
                            Name = "customersettings.notifynewcustomerregistration",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("7f2c0044-bdfc-4bc3-b672-2152dcb4cf3e"),
                            Name = "customersettings.hidedownloadableproductstab",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("5bbaf01b-36b3-4bbd-8765-7dfcee3d5a52"),
                            Name = "customersettings.hidebackinstocksubscriptionstab",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("ce1b64cc-2776-4bae-a73d-de0eb7e9d81e"),
                            Name = "customersettings.downloadableproductsvalidateuser",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("85049625-fa7d-42a1-962c-2235cd076461"),
                            Name = "customersettings.newsletterenabled",
                            Value = "True"
                        },
                        new
                        {
                            Id = new Guid("5f090644-3a66-45d0-8f35-c6fa95634595"),
                            Name = "customersettings.newslettertickedbydefault",
                            Value = "True"
                        },
                        new
                        {
                            Id = new Guid("c8b76e76-ff7f-4947-8649-3ea140ef4708"),
                            Name = "customersettings.hidenewsletterblock",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("fd922d63-fcfe-426e-8564-9e3f682f0246"),
                            Name = "customersettings.newsletterblockallowtounsubscribe",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("71a8e97f-b0e6-4962-8267-0a292b497191"),
                            Name = "customersettings.onlinecustomerminutes",
                            Value = "20"
                        },
                        new
                        {
                            Id = new Guid("0098e9e7-00ab-46c7-9297-3a63338608b0"),
                            Name = "customersettings.storelastvisitedpage",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("be498312-4405-4b28-ae0d-2499b846a41d"),
                            Name = "customersettings.storeipaddresses",
                            Value = "True"
                        },
                        new
                        {
                            Id = new Guid("caff18f1-ea97-48d4-b0db-1e48979fd54c"),
                            Name = "customersettings.lastactivityminutes",
                            Value = "15"
                        },
                        new
                        {
                            Id = new Guid("02999389-bfb7-4ecf-b375-a12358c6a903"),
                            Name = "customersettings.suffixdeletedcustomers",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("722e316c-cde7-44dc-a3dc-b600195a36b3"),
                            Name = "customersettings.enteringemailtwice",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("5c4e7c54-2ed3-49ee-bcd0-0d7c2ec987e8"),
                            Name = "customersettings.requireregistrationfordownloadableproducts",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("db09c2c8-5dff-4490-a254-6a1b10657786"),
                            Name = "customersettings.allowcustomerstocheckgiftcardbalance",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("480a09d6-3bd7-4dea-9482-e793412b36d6"),
                            Name = "customersettings.deleteguesttaskolderthanminutes",
                            Value = "1440"
                        },
                        new
                        {
                            Id = new Guid("7eb965d7-3214-434c-adfd-7dd6f700015d"),
                            Name = "customersettings.firstnameenabled",
                            Value = "True"
                        },
                        new
                        {
                            Id = new Guid("e807cd7c-01f2-47f0-9813-bf5d821e4bcc"),
                            Name = "customersettings.firstnamerequired",
                            Value = "True"
                        },
                        new
                        {
                            Id = new Guid("452f2c71-cf65-4f51-ad70-c20faf7caf51"),
                            Name = "customersettings.lastnameenabled",
                            Value = "True"
                        },
                        new
                        {
                            Id = new Guid("d78d9353-d061-42bd-8b05-7d26eb380cca"),
                            Name = "customersettings.lastnamerequired",
                            Value = "True"
                        },
                        new
                        {
                            Id = new Guid("cef82896-2ad2-41de-8018-bb0ecb23f66b"),
                            Name = "customersettings.genderenabled",
                            Value = "True"
                        },
                        new
                        {
                            Id = new Guid("e787434a-92aa-40f4-a8b2-bd6d7f8a57ea"),
                            Name = "customersettings.dateofbirthenabled",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("4e4873ba-38eb-4e4e-a92d-cfb4c950bb10"),
                            Name = "customersettings.dateofbirthrequired",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("85d53ddb-1023-4ad8-a98e-a198ef2252e0"),
                            Name = "customersettings.dateofbirthminimumage",
                            Value = ""
                        },
                        new
                        {
                            Id = new Guid("a982ef27-106d-4ea4-b52d-6f793e367314"),
                            Name = "customersettings.streetaddressenabled",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("038377a5-5279-46bc-b1db-322892f35722"),
                            Name = "customersettings.streetaddressrequired",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("0700f9ab-1fe6-4ce0-800e-b65c0e4f3512"),
                            Name = "customersettings.streetaddress2enabled",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("476d8426-184d-4c72-8e27-4a0f6ff21e23"),
                            Name = "customersettings.streetaddress2required",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("251950de-da31-4add-81db-fd598901263e"),
                            Name = "customersettings.zipcodeenabled",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("c0547ebe-d616-41dd-bd75-9cbfeed1dc17"),
                            Name = "customersettings.zipcoderequired",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("9df5fd0a-e1b0-4508-9b04-c494f58810c3"),
                            Name = "customersettings.cityenabled",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("21d28451-d551-499f-a56f-02a93ea61afc"),
                            Name = "customersettings.cityrequired",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("a5127d6d-f44f-475d-83ba-205f07624284"),
                            Name = "customersettings.countyenabled",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("f2e04d8a-e06e-4903-b254-ac7aa3bb8bde"),
                            Name = "customersettings.countyrequired",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("bf435a8d-ddf7-4638-a331-6d6b493b39e6"),
                            Name = "customersettings.countryenabled",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("1850d28b-83d9-476a-b76c-dd17981915e0"),
                            Name = "customersettings.countryrequired",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("a587d395-cd2d-495e-817f-829d5466ff94"),
                            Name = "customersettings.defaultcountryid",
                            Value = ""
                        },
                        new
                        {
                            Id = new Guid("22e54364-d9e3-4736-9297-e6e17bb54b68"),
                            Name = "customersettings.phoneenabled",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("e1ddf61e-d6eb-4418-8a9c-cb875e83d556"),
                            Name = "customersettings.phonerequired",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("62949af5-d26e-4380-b596-472c246d2211"),
                            Name = "customersettings.acceptprivacypolicyenabled",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("491b1fb5-6a49-47e8-ba98-f38fe08be0c4"),
                            Name = "securitysettings.encryptionkey",
                            Value = "8831297055374565"
                        },
                        new
                        {
                            Id = new Guid("800dd625-ee96-436c-98d1-25fd92eba5e0"),
                            Name = "securitysettings.honeypotenabled",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("d3c2d9ce-5718-479f-9c87-e2d3504239a2"),
                            Name = "securitysettings.honeypotinputname",
                            Value = "hpinput"
                        },
                        new
                        {
                            Id = new Guid("3cb3c84e-0d50-46e1-861d-1bf496f901ce"),
                            Name = "securitysettings.allownonasciicharactersinheaders",
                            Value = "True"
                        },
                        new
                        {
                            Id = new Guid("1f1c218e-a1dc-40f8-a2ca-6f85b71f20ea"),
                            Name = "securitysettings.useaesencryptionalgorithm",
                            Value = "True"
                        },
                        new
                        {
                            Id = new Guid("bce875dd-15d9-4887-b74e-344b5e1d99f7"),
                            Name = "securitysettings.allowstoreownerexportimportcustomerswithhashedpassword",
                            Value = "True"
                        },
                        new
                        {
                            Id = new Guid("1dffbc77-da99-4b71-9be2-cb914b9f03b2"),
                            Name = "messagesettings.usepopupnotifications",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("666effbe-b66d-4f60-832a-96028c81fc40"),
                            Name = "messagesettings.usedefaultemailaccountforsendstoreowneremails",
                            Value = "False"
                        },
                        new
                        {
                            Id = new Guid("8d4b78ce-7eb2-4289-a9da-07e2ab5bd180"),
                            Name = "emailaccountsettings.defaultemailaccountid",
                            Value = "fd5134ba-eb25-4c0d-81e1-b9639c1267c8"
                        });
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Customers.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("CannotLoginUntilDateUtc")
                        .HasPrecision(6)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasPrecision(6)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasPrecision(6)
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<bool>("EmailValidated")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Gender")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime?>("LastActivityDateUtc")
                        .HasPrecision(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastIpAddress")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastLoginDateUtc")
                        .HasPrecision(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberValidated")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RequireReLogin")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Customers.CustomerPassword", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasPrecision(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PasswordFormatId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomerPassword", (string)null);
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Customers.CustomerRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasPrecision(6)
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("CustomerRole", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4e772575-fb0f-4d10-b8fa-6dbfe0c6fe4f"),
                            Active = true,
                            CreatedOnUtc = new DateTime(2023, 7, 5, 15, 12, 32, 794, DateTimeKind.Utc).AddTicks(4882),
                            Deleted = false,
                            Name = "Administrators"
                        },
                        new
                        {
                            Id = new Guid("dff4bc34-01ec-46c8-a278-58273badef67"),
                            Active = true,
                            CreatedOnUtc = new DateTime(2023, 7, 5, 15, 12, 32, 794, DateTimeKind.Utc).AddTicks(4902),
                            Deleted = false,
                            Name = "ForumModerators"
                        },
                        new
                        {
                            Id = new Guid("2086daa6-323b-4bfe-b982-6eb485773718"),
                            Active = true,
                            CreatedOnUtc = new DateTime(2023, 7, 5, 15, 12, 32, 794, DateTimeKind.Utc).AddTicks(4904),
                            Deleted = false,
                            Name = "Registered"
                        },
                        new
                        {
                            Id = new Guid("cfae18cb-3b8d-4ece-bdba-e2a05c920459"),
                            Active = true,
                            CreatedOnUtc = new DateTime(2023, 7, 5, 15, 12, 32, 794, DateTimeKind.Utc).AddTicks(4906),
                            Deleted = false,
                            Name = "Guests"
                        },
                        new
                        {
                            Id = new Guid("1b48c281-e97f-4e8d-82fe-41ad1dde09b0"),
                            Active = true,
                            CreatedOnUtc = new DateTime(2023, 7, 5, 15, 12, 32, 794, DateTimeKind.Utc).AddTicks(4907),
                            Deleted = false,
                            Name = "Vendors"
                        });
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Localization.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("FlagImageFileName")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<bool>("IsDefaultLanguage")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LanguageCulture")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("Rtl")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UniqueSeoCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.ToTable("Language", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("50604336-8bfc-4c64-b537-8336a07ac0c4"),
                            Active = true,
                            Deleted = false,
                            DisplayOrder = 1,
                            FlagImageFileName = "tr.png",
                            IsDefaultLanguage = true,
                            LanguageCulture = "tr-TR",
                            Name = "TR",
                            Rtl = false,
                            UniqueSeoCode = "tr"
                        });
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Logging.ActivityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ActivityLogTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasPrecision(6)
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("EntityId")
                        .HasColumnType("char(36)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityLogTypeId");

                    b.HasIndex("CustomerId");

                    b.ToTable("ActivityLog", (string)null);
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Logging.ActivityLogType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SystemKeyword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ActivityLogType", (string)null);
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Logging.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasPrecision(6)
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("EndpointUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullMessage")
                        .HasColumnType("longtext");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<int>("LogLevel")
                        .HasColumnType("int");

                    b.Property<int>("LogLevelId")
                        .HasColumnType("int");

                    b.Property<string>("ShortMessage")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Log", (string)null);
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Messages.EmailAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<bool>("EnableSsl")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("EmailAccount", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("fd5134ba-eb25-4c0d-81e1-b9639c1267c8"),
                            Active = true,
                            Deleted = false,
                            DisplayName = "Store name",
                            Email = "test@mail.com",
                            EnableSsl = false,
                            Host = "smtp.mail.com",
                            Password = "123",
                            Port = 25,
                            Username = "123"
                        });
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Messages.MessageTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BccEmailAddresses")
                        .HasColumnType("longtext");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("EmailAccountId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmailAccountId");

                    b.ToTable("MessageTemplate", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e37f0e7f-e00b-4998-b171-7da59efbe8fe"),
                            Active = true,
                            Body = "We welcome you to <a href=\"%Store.URL%\"> %Store.Name%</a>.\r\n<br />\r\n<br />\r\nYou can now take part in the various services we have to offer you. Some of these services include:\r\n<br />\r\n<br />\r\nPermanent Cart - Any products added to your online cart remain there until you remove them, or check them out.\r\n<br />\r\nAddress Book - We can now deliver your products to another address other than yours! This is perfect to send birthday gifts direct to the birthday-person themselves.\r\n<br />\r\nOrder History - View your history of purchases that you have made with us.\r\n<br />\r\nProducts Reviews - Share your opinions on products with our other customers.\r\n<br />\r\n<br />\r\nFor help with any of our online services, please email the store-owner: <a href=\"mailto:%Store.Email%\">%Store.Email%</a>.\r\n<br />\r\n<br />\r\nNote: This email address was provided on our registration page. If you own the email and did not register on our site, please send an email to <a href=\"mailto:%Store.Email%\">%Store.Email%</a>.\r\n",
                            Deleted = false,
                            EmailAccountId = new Guid("fd5134ba-eb25-4c0d-81e1-b9639c1267c8"),
                            Name = "Customer.WelcomeMessage",
                            Subject = "Welcome to %Store.Name%"
                        });
                });

            modelBuilder.Entity("CustomerRoleMapping", b =>
                {
                    b.HasOne("YerdenYuksek.Core.Domain.Customers.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YerdenYuksek.Core.Domain.Customers.CustomerRole", null)
                        .WithMany()
                        .HasForeignKey("CustomerRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Common.Address", b =>
                {
                    b.HasOne("YerdenYuksek.Core.Domain.Customers.Customer", null)
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Customers.CustomerPassword", b =>
                {
                    b.HasOne("YerdenYuksek.Core.Domain.Customers.Customer", null)
                        .WithOne("CustomerPassword")
                        .HasForeignKey("YerdenYuksek.Core.Domain.Customers.CustomerPassword", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Logging.ActivityLog", b =>
                {
                    b.HasOne("YerdenYuksek.Core.Domain.Logging.ActivityLogType", "ActivityLogType")
                        .WithMany()
                        .HasForeignKey("ActivityLogTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YerdenYuksek.Core.Domain.Customers.Customer", null)
                        .WithMany("ActivityLogs")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityLogType");
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Logging.Log", b =>
                {
                    b.HasOne("YerdenYuksek.Core.Domain.Customers.Customer", null)
                        .WithMany("Logs")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Messages.MessageTemplate", b =>
                {
                    b.HasOne("YerdenYuksek.Core.Domain.Messages.EmailAccount", null)
                        .WithMany("MessageTemplates")
                        .HasForeignKey("EmailAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Customers.Customer", b =>
                {
                    b.Navigation("ActivityLogs");

                    b.Navigation("Addresses");

                    b.Navigation("CustomerPassword")
                        .IsRequired();

                    b.Navigation("Logs");
                });

            modelBuilder.Entity("YerdenYuksek.Core.Domain.Messages.EmailAccount", b =>
                {
                    b.Navigation("MessageTemplates");
                });
#pragma warning restore 612, 618
        }
    }
}
